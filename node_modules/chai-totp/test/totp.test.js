/**
 * @Description:
 * @author Lavi Chai
 * @date 2020/2/20 17:42
 */
const assert = require('assert');
const TOTP = require('../lib/totp');
const HOTP = require('../lib/hotp');

describe('TOTP', () => {
  const key = TOTP.base32.encode('12345678901234567890');
  const digit = 8;

  before(() => {
    Date.realNow = Date.now
  });
  after(() => {
    Date.now = Date.realNow
  })

  it('on unix time 59 sec', () => {
    Date.now = () => 59 * 1000;
    assert('94287082' === (new TOTP(key, digit)).genOTP());
  });
  it('on unix time 1111111109 sec', () => {
    Date.now = () => 1111111109 * 1000;
    assert('07081804' === (new TOTP(key, digit)).genOTP());
  });
  it('on unix time 1111111111 sec', () => {
    Date.now = () => 1111111111 * 1000;
    assert('14050471' === (new TOTP(key, digit)).genOTP());
  });
  it('on unix time 1234567890 sec', () => {
    Date.now = () => 1234567890 * 1000;
    assert('89005924' === (new TOTP(key, digit)).genOTP());
  });
  it('on unix time 2000000000 sec', () => {
    Date.now = () => 2000000000 * 1000;
    assert('69279037' === (new TOTP(key, digit)).genOTP());
  });
  it('on unix time 20000000000 sec', () => {
    Date.now = () => 20000000000 * 1000;
    assert('65353130' === (new TOTP(key, digit)).genOTP());
  });

  it('google authenticator url', () => {
    assert(new TOTP(key).gaURL('a', 'b') === `otpauth://totp/a?issuer=b&secret=${key}`)
  });
});
